{"ast":null,"code":"var _jsxFileName = \"C:\\\\Treinamentos-LOCAL\\\\2022-MERN-AN\\\\Web-MERN\\\\client\\\\src\\\\componentes\\\\Admin\\\\Posts\\\\PostForm\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { Form, Image } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Post } from \"../../../../api\";\nimport { useAuth } from \"../../../../hooks\";\nimport { ENV } from \"../../../../utils\";\nimport { initialValues, validationSchema } from \"./PostForm.form\";\nimport \"./PostForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postController = new Post();\nexport function PostForm(props) {\n  _s();\n  const {\n    close,\n    onReload,\n    post\n  } = props;\n  //console.log(props);\n  //console.log(onReload());\n  //console.log(close);\n  const {\n    accessToken\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: initialValues(post),\n    validationSchema: validationSchema(),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        if (!post) {\n          await postController.createPost(accessToken, formValue);\n        } else {\n          await postController.updatePost(accessToken, post._id, formValue);\n        }\n        onReload();\n        close();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    //console.log(acceptedFiles);\n    //console.log(URL.createObjectURL(file));\n    //console.log(file);\n    formik.setFieldValue(\"miniature\", URL.createObjectURL(file));\n    formik.setFieldValue(\"file\", file);\n  });\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"imag/jpeg, image/png\",\n    onDrop\n  });\n  const getMiniature = () => {\n    if (formik.values.file) {\n      return formik.values.miniature;\n    } else if (formik.values.miniature) {\n      return `${ENV.BASE_PATH}/${formik.values.miniature}`;\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"post-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"title\",\n        placeholder: \"T\\xEDtulo\",\n        onChange: formik.handleChange,\n        value: formik.values.title,\n        error: formik.errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"path\",\n        placeholder: \"Path\",\n        onChange: formik.handleChange,\n        value: formik.values.path,\n        error: formik.errors.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      init: {\n        height: 400,\n        menubar: true,\n        plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n        toolbar: \"undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help\"\n      },\n      initialValue: formik.values.content,\n      onBlur: e => formik.setFieldValue(\"content\", e.target.getContent())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form__miniature\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), getMiniature() ? /*#__PURE__*/_jsxDEV(Image, {\n        size: \"small\",\n        src: getMiniature()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Arraste uma imagem!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      loading: formik.isSubmitting,\n      children: post ? \"Atualizar o post\" : \"Criar novo post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"RU/yDX0wZU5f/7/ktocZD+dxvjQ=\", false, function () {\n  return [useAuth, useFormik, useDropzone];\n});\n_c = PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useCallback","Form","Image","useFormik","useDropzone","Post","useAuth","ENV","initialValues","validationSchema","postController","PostForm","props","close","onReload","post","accessToken","formik","validateOnChange","onSubmit","formValue","createPost","updatePost","_id","error","console","onDrop","acceptedFiles","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","accept","getMiniature","values","miniature","BASE_PATH","handleSubmit","handleChange","title","errors","path","height","menubar","plugins","toolbar","content","e","target","getContent","isSubmitting"],"sources":["C:/Treinamentos-LOCAL/2022-MERN-AN/Web-MERN/client/src/componentes/Admin/Posts/PostForm/PostForm.js"],"sourcesContent":["import React, {useCallback} from 'react';\r\nimport { Form, Image } from \"semantic-ui-react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Post } from \"../../../../api\";\r\nimport { useAuth } from \"../../../../hooks\";\r\nimport { ENV } from \"../../../../utils\";\r\nimport { initialValues, validationSchema } from \"./PostForm.form\";\r\nimport \"./PostForm.scss\";\r\n\r\n\r\nconst postController = new Post();\r\n\r\nexport function PostForm(props) {\r\n  \r\n  const { close, onReload, post } = props;\r\n  //console.log(props);\r\n//console.log(onReload());\r\n  //console.log(close);\r\n  const { accessToken } = useAuth();\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(post),\r\n    validationSchema: validationSchema(),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) => {\r\n        try {\r\n            if(!post){\r\n                await postController.createPost(accessToken, formValue);\r\n            }else{\r\n               await postController.updatePost(accessToken, post._id , formValue);\r\n            }\r\n            onReload();\r\n            close();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    //console.log(acceptedFiles);\r\n    //console.log(URL.createObjectURL(file));\r\n    //console.log(file);\r\n    formik.setFieldValue(\"miniature\", URL.createObjectURL(file));\r\n    formik.setFieldValue(\"file\", file);\r\n  });\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"imag/jpeg, image/png\",\r\n    onDrop,\r\n  });\r\n\r\n  const getMiniature = () => {\r\n    if(formik.values.file){\r\n        return formik.values.miniature;\r\n    }else if(formik.values.miniature){\r\n        return `${ENV.BASE_PATH}/${formik.values.miniature}`;\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  return (\r\n    <Form className='post-form' onSubmit={formik.handleSubmit}>\r\n        \r\n        <Form.Group widths=\"equal\">       \r\n            <Form.Input \r\n                name=\"title\" \r\n                placeholder=\"TÃ­tulo\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.title}\r\n                error={formik.errors.title}\r\n            />\r\n            <Form.Input \r\n                name=\"path\" \r\n                placeholder=\"Path\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.path}\r\n                error={formik.errors.path}\r\n            />\r\n        </Form.Group> \r\n\r\n        <Editor\r\n            init={{\r\n            height: 400,\r\n            menubar: true,\r\n            plugins: [\r\n                \"advlist autolink lists link image charmap print preview anchor\",\r\n                \"searchreplace visualblocks code fullscreen\",\r\n                \"insertdatetime media table paste code help wordcount\",\r\n            ],\r\n            toolbar:\r\n                \"undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help\",\r\n            }}\r\n            initialValue={formik.values.content}\r\n            onBlur={(e) => formik.setFieldValue(\"content\", e.target.getContent())}\r\n        />\r\n        \r\n        <div className='post-form__miniature' {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {getMiniature() ? \r\n            (<Image size=\"small\" src={getMiniature()} />) :\r\n            (\r\n                <div>\r\n                  <span>Arraste uma imagem!</span>\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n\r\n\r\n    <Form.Button type=\"submit\"  primary fluid  loading={ formik.isSubmitting }>\r\n        {post ? \"Atualizar o post\" : \"Criar novo post\"}\r\n    </Form.Button>\r\n\r\n    </Form>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}