{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wandi\\\\Documents\\\\2022-Curso-MERN-AgustinNavarro\\\\webPersonal\\\\client\\\\src\\\\componentes\\\\Admin\\\\Users\\\\UserForm\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { Form, Image } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport { User } from \"../../../../api\";\nimport { useAuth } from \"../../../../hooks\";\nimport { image } from \"../../../../assets\";\nimport { initialValues, validationSchema } from \"./UserForm.form\";\nimport \"./UserForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userController = new User();\nexport function UserForm(props) {\n  _s();\n  const {\n    close,\n    onReload,\n    user\n  } = props;\n  const {\n    accessToken\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: initialValues(user),\n    validationSchema: validationSchema(user),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        if (!user) {\n          await userController.createUser(accessToken, formValue);\n        } else {\n          console.log();\n        }\n        onReload();\n        close();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\n    formik.setFieldValue(\"fileAvatar\", file);\n  });\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"imag/jpeg, image/png\",\n    onDrop\n  });\n  const getAvatar = () => {\n    if (formik.values.fileAvatar) {\n      return formik.values.avatar;\n    }\n    return image.noAvatar;\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"user-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form__avatar\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        avatar: true,\n        size: \"small\",\n        src: getAvatar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"firstname\",\n        placeholder: \"Nome\",\n        onChange: formik.handleChange,\n        value: formik.values.firstname,\n        error: formik.errors.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"lastname\",\n        placeholder: \"Sobrenome\",\n        onChange: formik.handleChange,\n        value: formik.values.lastname,\n        error: formik.errors.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"email\",\n        placeholder: \"E-mail\",\n        onChange: formik.handleChange,\n        value: formik.values.email,\n        error: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Dropdown, {\n        placeholder: \"Selecione um perfil!\",\n        options: roleOptions,\n        selection: true,\n        onChange: (_, data) => formik.setFieldValue(\"role\", data.value),\n        value: formik.values.role,\n        error: formik.errors.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Senha\",\n      onChange: formik.handleChange,\n      value: formik.values.password,\n      error: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      loading: formik.isSubmitting,\n      children: user ? \"Atualizar usuário\" : \"Criar usuário\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(UserForm, \"RU/yDX0wZU5f/7/ktocZD+dxvjQ=\", false, function () {\n  return [useAuth, useFormik, useDropzone];\n});\n_c = UserForm;\nconst roleOptions = [{\n  key: \"user\",\n  text: \"Usuário\",\n  value: \"user\"\n}, {\n  key: \"admin\",\n  text: \"Administrador\",\n  value: \"admin\"\n}];\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useCallback","Form","Image","useFormik","useDropzone","User","useAuth","image","initialValues","validationSchema","userController","UserForm","props","close","onReload","user","accessToken","formik","validateOnChange","onSubmit","formValue","createUser","console","log","error","onDrop","acceptedFiles","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","accept","getAvatar","values","fileAvatar","avatar","noAvatar","handleSubmit","handleChange","firstname","errors","lastname","email","roleOptions","_","data","value","role","password","isSubmitting","key","text"],"sources":["C:/Users/wandi/Documents/2022-Curso-MERN-AgustinNavarro/webPersonal/client/src/componentes/Admin/Users/UserForm/UserForm.js"],"sourcesContent":["import React, {useCallback} from 'react';\r\nimport { Form, Image } from \"semantic-ui-react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { User } from \"../../../../api\";\r\nimport { useAuth } from \"../../../../hooks\";\r\nimport { image } from \"../../../../assets\";\r\nimport { initialValues, validationSchema } from \"./UserForm.form\";\r\nimport \"./UserForm.scss\";\r\n\r\n\r\nconst userController = new User();\r\n\r\nexport function UserForm(props) {\r\n  \r\n  const { close, onReload, user } = props;\r\n  const { accessToken } = useAuth();\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(user),\r\n    validationSchema: validationSchema(user),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) => {\r\n        try {\r\n            if(!user){\r\n                await userController.createUser(accessToken, formValue);\r\n            }else{\r\n                console.log()\r\n            }\r\n            onReload();\r\n            close();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n  })\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\r\n    formik.setFieldValue(\"fileAvatar\", file);\r\n  });\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"imag/jpeg, image/png\",\r\n    onDrop,\r\n  });\r\n\r\n  const getAvatar = () => {\r\n    if(formik.values.fileAvatar){\r\n        return formik.values.avatar;\r\n    }\r\n    return image.noAvatar;\r\n  }\r\n\r\n\r\n  return (\r\n    <Form className='user-form' onSubmit={formik.handleSubmit}>\r\n        <div className='user-form__avatar' {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Image avatar size=\"small\" src={getAvatar()} />\r\n        </div>\r\n\r\n    <Form.Group widths=\"equal\">\r\n        <Form.Input \r\n            name=\"firstname\" \r\n            placeholder=\"Nome\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.firstname}\r\n            error={formik.errors.firstname}\r\n        />\r\n        <Form.Input \r\n            name=\"lastname\" \r\n            placeholder=\"Sobrenome\" \r\n            onChange={formik.handleChange}\r\n            value={formik.values.lastname}\r\n            error={formik.errors.lastname}\r\n        />\r\n    </Form.Group>\r\n\r\n\r\n    <Form.Group widths=\"equal\">\r\n        <Form.Input \r\n            name=\"email\" \r\n            placeholder=\"E-mail\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            error={formik.errors.email}\r\n/>\r\n        <Form.Dropdown \r\n            placeholder='Selecione um perfil!' \r\n            options={roleOptions} \r\n            selection \r\n            onChange={(_, data)=> formik.setFieldValue(\"role\", data.value )}\r\n            value={formik.values.role}\r\n            error={formik.errors.role}\r\n        />\r\n    </Form.Group>\r\n\r\n    <Form.Input \r\n        type=\"password\" \r\n        name=\"password\" \r\n        placeholder=\"Senha\" \r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n        error={formik.errors.password}\r\n    />\r\n\r\n    <Form.Button type=\"submit\"  primary fluid  loading={ formik.isSubmitting }>\r\n        {user ? \"Atualizar usuário\" : \"Criar usuário\"}\r\n    </Form.Button>\r\n\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst roleOptions = [\r\n    {\r\n        key: \"user\",\r\n        text: \"Usuário\",\r\n        value: \"user\",\r\n    },\r\n\r\n    {\r\n        key: \"admin\",\r\n        text: \"Administrador\",\r\n        value: \"admin\",\r\n    },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}