{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wandi\\\\Documents\\\\2022-Curso-MERN-AgustinNavarro\\\\webPersonal\\\\client\\\\src\\\\componentes\\\\Admin\\\\Users\\\\ListUsers\\\\ListUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { User } from \"../../../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ListUsers(props) {\n  _s();\n  const {\n    usersActive\n  } = props;\n  // return (\n  //   <div>\n  //       <h2>Listando os usuários!!!</h2>\n  //       <p><h1>{usersActive ? \"Ativos\" : \"Inativos\"}</h1></p>\n  //   </div>\n  // )\n  const {\n    close,\n    onReload,\n    user\n  } = props;\n  const {\n    accessToken\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: validationSchema(),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        await userController.createUser(accessToken, formValue);\n        close();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\n    formik.setFieldValue(\"fileAvatar\", file);\n  });\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"imag/jpeg, image/png\",\n    onDrop\n  });\n  const getAvatar = () => {\n    if (formik.values.fileAvatar) {\n      return formik.values.avatar;\n    }\n    return image.noAvatar;\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"user-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form__avatar\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        avatar: true,\n        size: \"small\",\n        src: getAvatar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"firstname\",\n        placeholder: \"Nome\",\n        onChange: formik.handleChange,\n        value: formik.values.firstname,\n        error: formik.errors.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"lastname\",\n        placeholder: \"Sobrenome\",\n        onChange: formik.handleChange,\n        value: formik.values.lastname,\n        error: formik.errors.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"email\",\n        placeholder: \"E-mail\",\n        onChange: formik.handleChange,\n        value: formik.values.email,\n        error: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Dropdown, {\n        placeholder: \"Selecione um perfil!\",\n        options: roleOptions,\n        selection: true,\n        onChange: (_, data) => formik.setFieldValue(\"role\", data.value),\n        value: formik.values.role,\n        error: formik.errors.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Senha\",\n      onChange: formik.handleChange,\n      value: formik.values.password,\n      error: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      loading: formik.isSubmitting,\n      children: user ? \"Atualizar usuário\" : \"Criar usuário\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ListUsers, \"RU/yDX0wZU5f/7/ktocZD+dxvjQ=\", true);\n_c = ListUsers;\nvar _c;\n$RefreshReg$(_c, \"ListUsers\");","map":{"version":3,"names":["React","useState","useEffect","User","ListUsers","props","usersActive","close","onReload","user","accessToken","useAuth","formik","useFormik","initialValues","validationSchema","validateOnChange","onSubmit","formValue","userController","createUser","error","console","onDrop","useCallback","acceptedFiles","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","useDropzone","accept","getAvatar","values","fileAvatar","avatar","image","noAvatar","handleSubmit","handleChange","firstname","errors","lastname","email","roleOptions","_","data","value","role","password","isSubmitting"],"sources":["C:/Users/wandi/Documents/2022-Curso-MERN-AgustinNavarro/webPersonal/client/src/componentes/Admin/Users/ListUsers/ListUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { User } from \"../../../../api\"\r\n\r\nexport  function ListUsers(props) {\r\n\r\n  const { usersActive } = props;\r\n  // return (\r\n  //   <div>\r\n  //       <h2>Listando os usuários!!!</h2>\r\n  //       <p><h1>{usersActive ? \"Ativos\" : \"Inativos\"}</h1></p>\r\n  //   </div>\r\n  // )\r\n  const { close, onReload, user } = props;\r\n  const { accessToken } = useAuth();\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues(),\r\n    validationSchema: validationSchema(),\r\n    validateOnChange: false,\r\n    onSubmit: async (formValue) => {\r\n        try {\r\n            await userController.createUser(accessToken, formValue);\r\n            close();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n  })\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\r\n    formik.setFieldValue(\"fileAvatar\", file);\r\n  });\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"imag/jpeg, image/png\",\r\n    onDrop,\r\n  });\r\n\r\n  const getAvatar = () => {\r\n    if(formik.values.fileAvatar){\r\n        return formik.values.avatar;\r\n    }\r\n    return image.noAvatar;\r\n  }\r\n\r\n\r\n  return (\r\n    <Form className='user-form' onSubmit={formik.handleSubmit}>\r\n        <div className='user-form__avatar' {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Image avatar size=\"small\" src={getAvatar()} />\r\n        </div>\r\n\r\n    <Form.Group widths=\"equal\">\r\n        <Form.Input \r\n            name=\"firstname\" \r\n            placeholder=\"Nome\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.firstname}\r\n            error={formik.errors.firstname}\r\n        />\r\n        <Form.Input \r\n            name=\"lastname\" \r\n            placeholder=\"Sobrenome\" \r\n            onChange={formik.handleChange}\r\n            value={formik.values.lastname}\r\n            error={formik.errors.lastname}\r\n        />\r\n    </Form.Group>\r\n\r\n\r\n    <Form.Group widths=\"equal\">\r\n        <Form.Input \r\n            name=\"email\" \r\n            placeholder=\"E-mail\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            error={formik.errors.email}\r\n/>\r\n        <Form.Dropdown \r\n            placeholder='Selecione um perfil!' \r\n            options={roleOptions} \r\n            selection \r\n            onChange={(_, data)=> formik.setFieldValue(\"role\", data.value )}\r\n            value={formik.values.role}\r\n            error={formik.errors.role}\r\n        />\r\n    </Form.Group>\r\n\r\n    <Form.Input \r\n        type=\"password\" \r\n        name=\"password\" \r\n        placeholder=\"Senha\" \r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n        error={formik.errors.password}\r\n    />\r\n\r\n    <Form.Button type=\"submit\"  primary fluid  loading={ formik.isSubmitting }>\r\n        {user ? \"Atualizar usuário\" : \"Criar usuário\"}\r\n    </Form.Button>\r\n\r\n    </Form>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}