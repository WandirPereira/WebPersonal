{"ast":null,"code":"var _jsxFileName = \"C:\\\\Treinamentos-LOCAL\\\\2022-Curso-MERN-AgustinNavarro\\\\WebPersonal\\\\client\\\\src\\\\componentes\\\\Admin\\\\Users\\\\UserForm\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { Form, Image } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport { User } from \"../../../../api\";\nimport { useAuth } from \"../../../../hooks\";\nimport { image } from \"../../../../assets\";\nimport { ENV } from \"../../../../utils\";\nimport { initialValues, validationSchema } from \"./UserForm.form\";\nimport \"./UserForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userController = new User();\nexport function UserForm(props) {\n  _s();\n  const {\n    close,\n    onReload,\n    user\n  } = props;\n  //console.log(props);\n  //console.log(onReload());\n  //console.log(close);\n  const {\n    accessToken\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: initialValues(user),\n    validationSchema: validationSchema(user),\n    validateOnChange: false,\n    onSubmit: async formValue => {\n      try {\n        if (!user) {\n          await userController.createUser(accessToken, formValue);\n        } else {\n          await userController.updateUser(accessToken, user._id, formValue);\n        }\n        onReload();\n        close();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\n    formik.setFieldValue(\"fileAvatar\", file);\n  });\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"imag/jpeg, image/png\",\n    onDrop\n  });\n  const getAvatar = () => {\n    if (formik.values.fileAvatar) {\n      return formik.values.avatar;\n    } else if (formik.values.avatar) {\n      return `${ENV.BASE_PATH}/${formik.values.avatar}`;\n    }\n    return image.noAvatar;\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"user-form\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form__avatar\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        avatar: true,\n        size: \"small\",\n        src: getAvatar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"firstname\",\n        placeholder: \"Nome\",\n        onChange: formik.handleChange,\n        value: formik.values.firstname,\n        error: formik.errors.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"lastname\",\n        placeholder: \"Sobrenome\",\n        onChange: formik.handleChange,\n        value: formik.values.lastname,\n        error: formik.errors.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        name: \"email\",\n        placeholder: \"E-mail\",\n        onChange: formik.handleChange,\n        value: formik.values.email,\n        error: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Dropdown, {\n        placeholder: \"Selecione um perfil!\",\n        options: roleOptions,\n        selection: true,\n        onChange: (_, data) => formik.setFieldValue(\"role\", data.value),\n        value: formik.values.role,\n        error: formik.errors.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Senha\",\n      onChange: formik.handleChange,\n      value: formik.values.password,\n      error: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      loading: formik.isSubmitting,\n      children: user ? \"Atualizar usuário\" : \"Criar usuário\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(UserForm, \"RU/yDX0wZU5f/7/ktocZD+dxvjQ=\", false, function () {\n  return [useAuth, useFormik, useDropzone];\n});\n_c = UserForm;\nconst roleOptions = [{\n  key: \"user\",\n  text: \"Usuário\",\n  value: \"user\"\n}, {\n  key: \"admin\",\n  text: \"Administrador\",\n  value: \"admin\"\n}];\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useCallback","Form","Image","useFormik","useDropzone","User","useAuth","image","ENV","initialValues","validationSchema","userController","UserForm","props","close","onReload","user","accessToken","formik","validateOnChange","onSubmit","formValue","createUser","updateUser","_id","error","console","onDrop","acceptedFiles","file","setFieldValue","URL","createObjectURL","getRootProps","getInputProps","accept","getAvatar","values","fileAvatar","avatar","BASE_PATH","noAvatar","handleSubmit","handleChange","firstname","errors","lastname","email","roleOptions","_","data","value","role","password","isSubmitting","key","text"],"sources":["C:/Treinamentos-LOCAL/2022-Curso-MERN-AgustinNavarro/WebPersonal/client/src/componentes/Admin/Users/UserForm/UserForm.js"],"sourcesContent":["import React, {useCallback} from 'react';\nimport { Form, Image } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport { User } from \"../../../../api\";\nimport { useAuth } from \"../../../../hooks\";\nimport { image } from \"../../../../assets\";\nimport { ENV } from \"../../../../utils\";\nimport { initialValues, validationSchema } from \"./UserForm.form\";\nimport \"./UserForm.scss\";\n\n\nconst userController = new User();\n\nexport function UserForm(props) {\n  \n  const { close, onReload, user } = props;\n  //console.log(props);\n//console.log(onReload());\n  //console.log(close);\n  const { accessToken } = useAuth();\n\n  const formik = useFormik({\n    initialValues: initialValues(user),\n    validationSchema: validationSchema(user),\n    validateOnChange: false,\n    onSubmit: async (formValue) => {\n        try {\n            if(!user){\n                await userController.createUser(accessToken, formValue);\n            }else{\n               await userController.updateUser(accessToken, user._id , formValue);\n            }\n            onReload();\n            close();\n        } catch (error) {\n            console.error(error);\n        }\n    }\n  });\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    formik.setFieldValue(\"avatar\", URL.createObjectURL(file));\n    formik.setFieldValue(\"fileAvatar\", file);\n  });\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"imag/jpeg, image/png\",\n    onDrop,\n  });\n\n  const getAvatar = () => {\n    if(formik.values.fileAvatar){\n        return formik.values.avatar;\n    }else if(formik.values.avatar){\n        return `${ENV.BASE_PATH}/${formik.values.avatar}`;\n    }\n    return image.noAvatar;\n  }\n\n\n  return (\n    <Form className='user-form' onSubmit={formik.handleSubmit}>\n        <div className='user-form__avatar' {...getRootProps()}>\n            <input {...getInputProps()} />\n            <Image avatar size=\"small\" src={getAvatar()} />\n        </div>\n\n    <Form.Group widths=\"equal\">\n        <Form.Input \n            name=\"firstname\" \n            placeholder=\"Nome\"\n            onChange={formik.handleChange}\n            value={formik.values.firstname}\n            error={formik.errors.firstname}\n        />\n        <Form.Input \n            name=\"lastname\" \n            placeholder=\"Sobrenome\" \n            onChange={formik.handleChange}\n            value={formik.values.lastname}\n            error={formik.errors.lastname}\n        />\n    </Form.Group>\n\n\n    <Form.Group widths=\"equal\">\n        <Form.Input \n            name=\"email\" \n            placeholder=\"E-mail\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            error={formik.errors.email}\n/>\n        <Form.Dropdown \n            placeholder='Selecione um perfil!' \n            options={roleOptions} \n            selection \n            onChange={(_, data)=> formik.setFieldValue(\"role\", data.value )}\n            value={formik.values.role}\n            error={formik.errors.role}\n        />\n    </Form.Group>\n\n    <Form.Input \n        type=\"password\" \n        name=\"password\" \n        placeholder=\"Senha\" \n        onChange={formik.handleChange}\n        value={formik.values.password}\n        error={formik.errors.password}\n    />\n\n    <Form.Button type=\"submit\"  primary fluid  loading={ formik.isSubmitting }>\n        {user ? \"Atualizar usuário\" : \"Criar usuário\"}\n    </Form.Button>\n\n    </Form>\n  );\n}\n\nconst roleOptions = [\n    {\n        key: \"user\",\n        text: \"Usuário\",\n        value: \"user\",\n    },\n\n    {\n        key: \"admin\",\n        text: \"Administrador\",\n        value: \"admin\",\n    },\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}