{"ast":null,"code":"import { SearchResults } from \"semantic-ui-react\";\nimport { ENV } from \"../utils\";\nexport class Auth {\n  constructor() {\n    this.baseApi = ENV.BASE_API;\n  }\n  async register(data) {\n    try {\n      const url = `${this.baseApi}/${ENV.API_ROUTES.REGISTER}`;\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password\n        })\n      };\n      const response = await fetch(url, params);\n      const result = await response.json();\n\n      //console.log(response);\n      if (response.status !== 201) throw result;\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async login(data) {\n    try {\n      const url = `${this.baseApi}/${ENV.API_ROUTES.LOGIN}`;\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      const response = await fetch(url, params);\n      const result = await response;\n    } catch (error) {}\n  }\n}","map":{"version":3,"names":["SearchResults","ENV","Auth","baseApi","BASE_API","register","data","url","API_ROUTES","REGISTER","params","method","headers","body","JSON","stringify","email","password","response","fetch","result","json","status","error","login","LOGIN"],"sources":["C:/Users/wandi/Documents/2022-Curso-MERN-AgustinNavarro/webPersonal/client/src/api/auth.js"],"sourcesContent":["import { SearchResults } from \"semantic-ui-react\";\r\nimport { ENV } from \"../utils\";\r\n\r\nexport class Auth {\r\n    baseApi = ENV.BASE_API;\r\n\r\n    async register(data) {\r\n        try {\r\n            const url = `${this.baseApi}/${ENV.API_ROUTES.REGISTER}`;\r\n            const params = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    email: data.email,\r\n                    password: data.password,\r\n                }),\r\n            };\r\n\r\n            const response = await fetch(url, params);\r\n            const result = await response.json();\r\n\r\n            //console.log(response);\r\n            if (response.status !== 201) throw result;\r\n\r\n            return result;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async login(data) {\r\n\r\n        try {\r\n            const url = `${this.baseApi}/${ENV.API_ROUTES.LOGIN}`;\r\n\r\n            const params = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data),\r\n            };\r\n\r\n            const response = await fetch(url,params);\r\n            const result = await response\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,mBAAmB;AACjD,SAASC,GAAG,QAAQ,UAAU;AAE9B,OAAO,MAAMC,IAAI,CAAC;EAAA;IAAA,KACdC,OAAO,GAAGF,GAAG,CAACG,QAAQ;EAAA;EAEtB,MAAMC,QAAQ,CAACC,IAAI,EAAE;IACjB,IAAI;MACA,MAAMC,GAAG,GAAI,GAAE,IAAI,CAACJ,OAAQ,IAAGF,GAAG,CAACO,UAAU,CAACC,QAAS,EAAC;MACxD,MAAMC,MAAM,GAAG;QACXC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAEV,IAAI,CAACU,KAAK;UACjBC,QAAQ,EAAEX,IAAI,CAACW;QACnB,CAAC;MACL,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAG,EAAEG,MAAM,CAAC;MACzC,MAAMU,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;;MAEpC;MACA,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE,MAAMF,MAAM;MAEzC,OAAOA,MAAM;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMC,KAAK,CAAClB,IAAI,EAAE;IAEd,IAAI;MACA,MAAMC,GAAG,GAAI,GAAE,IAAI,CAACJ,OAAQ,IAAGF,GAAG,CAACO,UAAU,CAACiB,KAAM,EAAC;MAErD,MAAMf,MAAM,GAAG;QACXC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC7B,CAAC;MAED,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAG,EAACG,MAAM,CAAC;MACxC,MAAMU,MAAM,GAAG,MAAMF,QAAQ;IAEjC,CAAC,CAAC,OAAOK,KAAK,EAAE,CAEhB;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}